clear,clc
%Case 1: modelling for GFNN
data00=xlsread('Data for case 1.xlsx');
data0=data00(2:601,3:14);
mu = mean(data0);
sig = std(data0);
ndata = (data0 - ones(length(data0(:,1)),1)*mu) ./...
    (ones(length(data0(:,1)),1)*sig); 
[m,n]=size(data0)
k=10;
j=0
indices = crossvalind('KFold',m,k);
for i=1:k
    j = j+1;
	test1=(indices==j);
	t_rain1=~test1;
	Train_Data=ndata(t_rain1,:);  
	TestData=ndata(test1,:); 
    Feature = Train_Data(:,1:4);
    test_Feature = TestData(:,1:4);
    DPP = Train_Data(:,5:12);
    test_DPP = TestData(:,5:12); 
    Feature = Feature';
    test_Feature = test_Feature';
    DPP = DPP';
    test_DPP = test_DPP';
    net1=newff(Feature,DPP,[11,13],{'tansig','purelin'},'trainlm');
    net1 = init(net1);
    net1.divideFcn = 'dividerand';
    net1.divideParam.testRatio = 0;
    net1.divideParam.valRatio = 0;
    [nets,tr] = train(net1, Feature, DPP);
    predict = nets(test_Feature);
    perf = mse(nets,test_DPP,predict);    
    record(i) = perf;    
end
mean_mse = mean(record)
rmse = sqrt(mean_mse)
m=find(record==min(record))

test1=(indices==m); 
	t_rain1=~test1; 
	Train_Data=ndata(t_rain1,:); 
	TestData=ndata(test1,:); 
    Feature = Train_Data(:,1:4);
    test_Feature = TestData(:,1:4);
    DPP = Train_Data(:,5:12);
    test_DPP = TestData(:,5:12); 
    Feature = Feature';
    test_Feature = test_Feature';
    DPP = DPP';
    test_DPP = test_DPP';
    net1=newff(Feature,DPP,[11,13],{'tansig','purelin'},'trainlm');
    net1 = init(net1);
    net1.divideFcn = 'dividerand';
    net1.divideParam.testRatio = 0;
    net1.divideParam.valRatio = 0;
    [nets,tr] = train(net1, Feature, DPP);

predict = nets(test_Feature);
   perf = mse(nets,test_DPP,predict)
save k1 nets
%Case 1:MFNN-1
k=10
indices = crossvalind('KFold',m,k);
record = zeros(1,10);
for i=1:10
    test1=(indices==i);
    t_rain1=~test1; 
    Train_Data=ndata(t_rain1,:); 
    TestData=ndata(test1,:); 
    Feature = Train_Data(:,1:2);
    test_Feature = TestData(:,1:2);
    DPP = Train_Data(:,9:12);
    test_DPP = TestData(:,9:12); 
    Feature = Feature';
    test_Feature = test_Feature';
    DPP = DPP';
    test_DPP = test_DPP';
    net1=newff(Feature,DPP,11,{'tansig','purelin'},'trainlm');
    net1 = init(net1);
    net1.divideFcn = 'dividerand';
    net1.divideParam.testRatio = 0;
    net1.divideParam.valRatio = 0;
    [nets1,tr] = train(net1, Feature, DPP);
    predict = nets1(test_Feature);
    perf = mse(nets1,test_DPP,predict);    
    record(i) = perf;        
end
mean_mse1 = mean(record)
rmse1 = sqrt(mean_mse1)
m1=find(record==min(record))

m1=find(record==min(record))

test1=(indices==m1);
	t_rain1=~test1; 
	Train_Data=ndata(t_rain1,:); 
	TestData=ndata(test1,:); 
    Feature = Train_Data(:,1:2);
    test_Feature = TestData(:,1:2);
    DPP = Train_Data(:,9:12);
    test_DPP = TestData(:,9:12); 
    Feature = Feature';
    test_Feature = test_Feature';
    DPP = DPP';
    test_DPP = test_DPP';
    net1=newff(Feature,DPP,11,{'tansig','purelin'},'trainlm');
    net1 = init(net1);
    net1.divideFcn = 'dividerand';
    net1.divideParam.testRatio = 0;
    net1.divideParam.valRatio = 0;
    [nets1,tr] = train(net1, Feature, DPP);

predict1 = nets1(test_Feature);
   perf1 = mse(nets1,test_DPP,predict1)
save k2 nets1
%Case 1:MFNN-2
k=10;
indices = crossvalind('KFold',m,k);
j=0;
for i=1:10
    j= j+1;
	test1=(indices==j);
	t_rain1=~test1;
	Train_Data=ndata(t_rain1,:); 
	TestData=ndata(test1,:); 
    Feature1 = Train_Data(:,3:4);
    Feature2 = Train_Data(:,9:12);
    Feature = [Feature1,Feature2];
    test_Feature1 = TestData(:,3:4);
    test_Feature2 = TestData(:,9:12);
    test_Feature  =[test_Feature1,test_Feature2];
    DPP = Train_Data(:,5:8);
    test_DPP = TestData(:,5:8); 
    Feature = Feature';
    test_Feature = test_Feature';
    DPP = DPP';
    test_DPP = test_DPP';
    net1=newff(Feature,DPP,13,{'tansig','purelin'},'trainlm');
    net1 = init(net1);
    net1.divideFcn = 'dividerand';
    net1.divideParam.testRatio = 0;
    net1.divideParam.valRatio = 0;
    [nets2,tr] = train(net1, Feature, DPP);
    predict = nets2(test_Feature);
    perf = mse(nets2,test_DPP,predict);    
    record(i) = perf;    
end
mean_mse2 = mean(record)
rmse2 = sqrt(mean_mse2)
m2=find(record==min(record))
test1=(indices==m2); 
	t_rain1=~test1; 
	Train_Data=ndata(t_rain1,:);
	TestData=ndata(test1,:); 
    Feature1 = Train_Data(:,3:4);
    Feature2 = Train_Data(:,9:12);
    Feature = [Feature1,Feature2];
    test_Feature1 = TestData(:,3:4);
    test_Feature2 = TestData(:,9:12);
    test_Feature  =[test_Feature1,test_Feature2];
    DPP = Train_Data(:,5:8);
    test_DPP = TestData(:,5:8); 
    Feature = Feature';
    test_Feature = test_Feature';
    DPP = DPP';
    test_DPP = test_DPP';
    net1=newff(Feature,DPP,13,{'tansig','purelin'},'trainlm');
    net1 = init(net1);
    net1.divideFcn = 'dividerand';
    net1.divideParam.testRatio = 0;
    net1.divideParam.valRatio = 0;
    [nets2,tr] = train(net1, Feature, DPP);
predict2 = nets2(test_Feature);
    perf = mse(nets2,test_DPP,predict2)
save k3 nets2
